---
- name: Configure NTP on managed nodes
  hosts: all
  gather_facts: false
  tasks:
    - name: Enable the NETCONF service
      vars:
        ansible_connection: ansible.netcommon.network_cli
      junipernetworks.junos.junos_netconf:
        listens_on: 830
        state: present
      when: ansible_network_os == "junipernetworks.junos.junos"

    - name: Back up the Juniper Junos configurations
      junipernetworks.junos.junos_config:
        backup: true
        backup_options:
          filename: "{{ inventory_hostname }}.txt"
      when: ansible_network_os == "junipernetworks.junos.junos"

    - name: Back up the IOS configurations
      cisco.ios.ios_config:
        backup: true
        backup_options:
          filename: "{{ inventory_hostname }}.txt"
      when: ansible_network_os == "cisco.ios.ios"

    - name: Reconfiguring Juniper managed nodes
      block:
        - name: Configure NTP on Juniper Junos managed nodes
          junipernetworks.junos.junos_ntp_global:
            config:
              servers:
                - server: "{{ ntp_server_1 }}"
                - server: "{{ ntp_server_2 }}"
            state: merged 
        - name: Verify previous NTP configuration no longer exists junipernetworks.junos.junos_command:
          commands:
            - show configuration system ntp
          register: ntp_servers
          failed_when: >
            ('server 172.25.23.240;' in ntp_servers['stdout_lines'][0])
            or
            ('server 172.25.23.230;' in ntp_servers['stdout_lines'][0])    
      when: ansible_network_os == "junipernetworks.junos.junos"

    - name: Reconfiguring IOS managed nodes
      block:
        - name: Configure NTP on IOS managed nodes
          cisco.ios.ios_ntp_global:
            config:
              servers:
                - server: "{{ ntp_server_1 }}"
                - server: "{{ ntp_server_2 }}"
          state: merged
        - name: Verify previous NTP configuration no longer exists
          cisco.ios.ios_command:
            - show run | include ntp
          register: ntp_servers
          failed_when: >
            ('ntp server 172.25.23.240' in ntp_servers['stdout_lines'][0])
            or
            ('ntp server 172.25.23.230' in ntp_servers['stdout_lines'][0])

      when: ansible_network_os == "cisco.ios.ios"
